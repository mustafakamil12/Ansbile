======================================================== Ansible For absolute beginner ===========================================



================================================================ Introduction ====================================================

# Why Ansible:
	i. Provisioning
	ii. Configuration Management
	iii. Continuous Delivery
	iv. Application Deployment
	v. Security Compliance

# There many of examples that Ansible really can be the most powerfull tool to use with:
	i. if u have many web servers and database servers, you need to reboot these servers, u can write a play book to start power off the web servers first and then power off the database servers and then power on db servers and then web servers.

	ii. another good one, if u have a complex infrastructure that span cross public and private clouds running 100's of vms. u can easly spin vms in both clouds as well u can connect Ansible to db or service now so it will spin up asap.

# all required info are in: https://docs.ansible.com/

================================================================== Setup Lab =====================================================

# we will use VirtualBox to set the lab.
	i. we will create multiple vms for the lab
		- Template: will be used to create the other requierd vms
		- Ansible controller
		- target01
		- target02
	ii. we will use pre installed and pre configured virtual images on --> osboxes.org

	iii. in the osboxes select VM Images --> VirtualBox Images --> CentOS --> download the latest version and 64
		- Username: osboxes
		- Password: osboxes.org
		- Root Account Password: osboxes.org

	iv. configuration:
		- Name: centos-template
		- type: linux
		- version: other linux 64
		- Memory: 2048 MB
		- processor: 2
		- network: bridge

	v. clone from the template:
		- Name: ansibel-controller / ansible-target1 /ansible-target2
		- path: /Users/mustafaalogaidi/VirtualBox VMs
		- Mac Address Policy: Generate new MAC address for all network adapters
		- Linked Clone

	vi. change host name
		- sudo vi /etc/hostname --> ansiblecontroller / target1 / target2
		- sudo vi /etc/hosts    --> host ansiblecontroller
		- sudo shutdown now -r

	vii. install ansible on the controller
		- sudo yum install epel-release
		- sudo yum install ansible
		- ansible --version

================================================================== Inventory =====================================================

# Ansible deal with one or multi servers at the same time in the infra.

# Ansible need to establish connection to the servers in the infra.

# Ansible establish connection ---- SSH for linux 		(ssh)
								 |_ PowerShell Remote	(winrm)

# Ansible is agent less, nothing need to be installed to the target systems.

# information about target systems stored in Inventory file

# if u don't create Inventory file, Ansible will automatically used the default inventory file in --> /etc/ansible/hosts

# Inventory file is like ini file

# we can add an alias in the begining of the line of each server in the Inventory file, and assign the server address to the ansible_host parameter
# ansible_host: is an invetory paramter use to specify the FQDN or IP address of the server.

# additional Inventory parameters:
	• ansible_connection – ssh/winrm/localhost  --> how ansible connect to the server
	• ansible_port – 22/5986					--> defines which port to connect to
	• ansible_user – root/administrator			--> defines user
	• ansible_ssh_pass - Password				--> defines ssh password
	• ansible_password - password 				--> defines winrm password

# now we need to do a simple test to check the connectivity between controller and targets

	> ssh <target ip> 
	- if there's any issue with ssh, that's mean we need to configure ssh on the targets.
	- open https://fedoraproject.org/wiki/EPEL in the browser
	- copy link of "epel-release-latest-8"
	- wget <link from step above>
	- rpm -ivh epel-release-*-*.noarch.rpm   --> where * version number, file already will be available on the directory.
	- sudo yum install sshpass -y
	- sudo shutdown now -r

	- if the above not working or take to long:
	- sudo vi /etc/ssh/ssh_config
	- enable port 22

# now let's create an Inventory file in the controller
 	- mkdir test-project
 	- cd test-project
 	- cat > inventory.txt
 	  target1 ansible_host=192.168.0.20 ansible_ssh_pass=osboxes.org

# let's run ansible command:
	- be sure that u already ssh to targets meachines before apply the command below.
	
	- ansible target1 -m ping -i inventory.txt   -> -m module  -i inventory
	
	- if ping success u will get pong as response
	
	- if u didn't already ssh to a target machine and try to apply the command above, it will failed with ssh error.
	
	- u can pass the issue above by disable host_key_checking  
	- vi /etc/ansible/ansible.cfg
	- uncomment -->  host_key_checking = False
	- the way above is not safe


=================================================================== Yaml =========================================================

# Yaml is a key: value defined data.
# rember there's a space befor value.





